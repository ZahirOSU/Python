def allAnagram(input):
     
    # empty dictionary which holds subsets
    # of all anagrams together
    dict = {}
 
    # traverse list of strings
    for strVal in input:
         
        # sorted(iterable) method accepts any
        # iterable and returns list of items
        # in ascending order
        key = ''.join(sorted(strVal))
         
        # now check if key exist in dictionary
        # or not. If yes then simply append the
        # strVal into the list of it's corresponding
        # key. If not then map empty list onto
        # key and then start appending values
        if key in dict.keys():
            dict[key].append(strVal)
        else:
            dict[key] = []
            dict[key].append(strVal)
 
    # traverse dictionary and concatenate values
    # of keys together
    output = []
    for key,value in dict.items():
        output.append(value)  
    for i in output:
        if len(i) ==1:
            output.remove(i)
    return output
 
input=['cat', 'dog', 'tac', 'god', 'act', 'Ali']
print (allAnagram(input))

#output: [['cat',  'act', 'tac'],['dog',  'god']]
