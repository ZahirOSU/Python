The left array tells us where the last 1 is observed by the point we reach cell i from left. The right is the same, except we come
from right. At any given point we update the answer via a simple min-max operation. By placing -inf/inf
to the left/right arrays we show that the seats are empty to the left/right.
This saves us from writing a few additional if statements in the last loop.
Input: seats = [1,0,0,0,1,0,1]
Output: 2
Explanation: 
If Alex sits in the second open seat (i.e. seats[2]), then the closest person has distance 2.
If Alex sits in any other open seat, the closest person has distance 1.
Thus, the maximum distance to the closest person is 2.


def maxDistToClosest( A):
        #left messages
        left, last = [0]*len(A), -float('inf')
        for i in range(len(A)):
            left[i] = last
            if A[i]==1: last=i
        
        #right messages
        right, last = [0]*len(A), float('inf')
        for i in reversed(range(len(A))):
            right[i] = last
            if A[i]==1: last=i
        
        #distances
        ans = 0
        for i in range(len(A)):
            if A[i]==0: ans = max(ans, min(i-left[i], right[i]-i))
        return ans
A = [1,0,0,0,1,0,1]

print(maxDistToClosest( A))
asr: 2
